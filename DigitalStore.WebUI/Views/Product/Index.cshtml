@using DigitalStore.Models
@model ReflectionIT.Mvc.Paging.PagingList<Product>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Index";
}

<div class="col-6">
	<h2 class="text-primary">Product List</h2>
</div>

<nav class="pagination">
    <vc:pager paging-list="@Model"/>
</nav>

<form method="get">
    @*<nav class="pagination">
     @await this.Component.InvokeAsync("Pager", new {pagingList = this.Model})
</nav>
*@
    <div class="container p-3">
        <div class="item p-3">
            <label>Filters:</label>
            <select class="dropdown" data-bs-toggle="dropdown" name="sortOrder">
                <option>Price (ascending)</option>
                <option>Price (descending)</option>
             </select>
            <input type="text" name="searchString" value="@Model.RouteValue["SearchString"]"/>
             <button type="submit" class="btn btn-primary" style="width:100px">
                Search
             </button>
        </div>
        @foreach (var product in Model)
        {
            <div class="item p-3">
                <div class="rowItem">
                    <div class="forPrice">
                       @product.ProductPrice.ToString("# $")
                    </div>
                    <div class="forName">  
                       <h3>
                           <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" class="link page-link">@product.ProductName</a>
                       </h3>                  
                    </div>
                    <p>@product.ProductDescription</p>
                    <a asp-controller="Product" asp-action="Buy" asp-route-id="@product.Id" class="btn btn-primary" style="width:125px">
                        Buy
                    </a>
                    <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@product.Id" class="btn btn-secondary" style="width:125px">
                        Add To Cart
                    </a>
                </div>     
            </div>
        } 
    </div>
</form>

<nav class="pagination">
    @await this.Component.InvokeAsync("Pager", new {pagingList = this.Model})
</nav>