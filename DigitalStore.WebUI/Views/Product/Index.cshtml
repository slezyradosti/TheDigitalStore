@using DigitalStore.Models
@model ReflectionIT.Mvc.Paging.PagingList<Product>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging
@*@model IEnumerable<Product>*@

@{
    ViewData["Title"] = "Index";
}

<div class="col-6">
	<h2 class="text-primary">Product List</h2>
</div>

<nav class="pagination">
     @await this.Component.InvokeAsync("Pager", new {pagingList = this.Model})
</nav>

<form method="post">
    <div class="container p-3">
        <div class="row pt-4">      
            <dib class="col-3 text-end">
                <a asp-controller="Product" asp-action="Create" class="btn btn-primary" style="width:300px">
                    <i class="bg-info bi-plus-square"></i> &nbsp; Add Product
                </a>
            </dib>
        </div>
        <br/><br/>

        @foreach (var product in Model)
        {
            <div class="item p-3">
                <div class="rowItem">
                    <div class="forPrice">
                       @product.ProductPrice.ToString("# $")
                    </div>
                    <div class="forName">  
                       <h3>
                           <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" class="link page-link">@product.ProductName</a>
                       </h3>                  
                    </div>
                    <p>@product.ProductDescription</p>
                    <a asp-controller="Product" asp-action="Buy" asp-route-id="@product.Id" class="btn btn-primary" style="width:125px">
                        Buy
                    </a>
                    <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@product.Id" class="btn btn-secondary" style="width:125px">
                        Add To Cart
                    </a>
                </div>     
            </div>
        } 
    </div>
</form>

<nav class="pagination">
    @await this.Component.InvokeAsync("Pager", new {pagingList = this.Model})
</nav>